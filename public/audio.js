'use strict';

/**
 * @file audio.js
 * @version 1.0.0
 * @author Donitz 2019
 */

let muted = false;

const createSound = (settings, count, volume) => {
    const src = jsfxr(settings);
    const players = new Array(count).fill(null).map(() => {
        const p = new Audio();
        p.src = src;
        return p;
    });
    let i = 0;
    return () => {
        if (muted) {
            return;
        }
        const p = players[i];
        i = (i + 1) % count;
        p.volume = volume;
        if (p.paused) {
            p.play();
        } else {
            p.currentTime = 0;
        }
    };
};

const musicList = [
    jsfxrSequence({rate:5,fs:44100,channelsPerNote:5,instruments:[null,null,[0,0.1,0.1,null,0.3,0.6,null,-0.1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,0.5],null,null,[0,0.1,0.1,null,0.8,0.6,null,-0.1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,0.2],null,null,null,null,null,null,null,null,null,null,null],tracks:[[],[],[2,1,48,51,0,1,55,51,1,1,55,51,0,1,63,51,1,1,63,51,0,1,72,51,1,1,67,51,0,1,55,51,2,1,67,51,0,1,75,51,1,1,72,51,0,1,63,51,1,1,48,51,0,1,55,51,1,1,55,51,0,1,63,51,2,1,63,51,0,1,72,51,1,1,67,51,0,1,55,51,1,1,67,51,0,1,75,51,1,1,72,51,0,1,63,51,2,1,48,51,0,1,55,51,1,1,55,51,0,1,63,51,1,1,63,51,0,1,72,51,1,1,67,51,0,1,55,51,2,1,67,51,0,1,75,51,1,1,72,51,0,1,63,51,1,1,48,51,0,1,55,51,1,1,55,51,0,1,63,51,2,1,63,51,0,1,72,51,1,1,67,51,0,1,55,51,1,1,67,51,0,1,75,51,1,1,72,51,0,1,63,51,2,1,55,51,0,1,43,51,1,1,62,51,0,1,55,51,1,1,67,51,0,1,62,51,1,1,62,51,0,1,55,51,2,1,74,51,0,1,65,51,1,1,71,51,0,1,62,51,1,1,55,51,0,1,43,51,1,1,62,51,0,1,55,51,2,1,67,51,0,1,62,51,1,1,62,51,0,1,55,51,1,1,74,51,0,1,65,51,1,1,71,51,0,1,62,51,2,1,55,51,0,1,43,51,1,1,62,51,0,1,55,51,1,1,67,51,0,1,62,51,1,1,62,51,0,1,55,51,2,1,74,51,0,1,65,51,1,1,71,51,0,1,62,51,1,1,55,51,0,1,43,51,1,1,62,51,0,1,55,51,2,1,67,51,0,1,62,51,1,1,62,51,0,1,55,51,1,1,74,51,0,1,65,51,1,1,71,51,0,1,62,51,2,1,48,51,0,1,55,51,1,1,55,51,0,1,63,51,1,1,63,51,0,1,72,51,1,1,67,51,0,1,55,51,2,1,67,51,0,1,75,51,1,1,72,51,0,1,63,51,1,1,48,51,0,1,55,51,1,1,55,51,0,1,63,51,2,1,63,51,0,1,72,51,1,1,67,51,0,1,55,51,1,1,67,51,0,1,75,51,1,1,72,51,0,1,63,51,2,1,48,51,0,1,56,51,1,1,63,51,0,1,56,51,1,1,63,51,0,1,72,51,1,1,56,51,0,1,63,51,2,1,75,51,0,1,68,51,1,1,72,51,0,1,63,51,1,1,48,51,0,1,56,51,1,1,63,51,0,1,56,51,2,1,63,51,0,1,72,51,1,1,56,51,0,1,63,51,1,1,75,51,0,1,68,51,1,1,72,51,0,1,63,51,2,1,48,51,0,1,55,51,1,1,55,51,0,1,63,51,1,1,63,51,0,1,72,51,1,1,67,51,0,1,55,51,2,1,67,51,0,1,75,51,1,1,72,51,0,1,63,51,1,1,48,51,0,1,55,51,1,1,55,51,0,1,63,51,2,1,63,51,0,1,72,51,1,1,67,51,0,1,55,51,1,1,67,51,0,1,75,51,1,1,72,51,0,1,63,51,2,1,43,51,0,1,55,51,1,1,50,51,0,1,59,51,1,1,55,51,0,1,65,51,1,1,62,51,0,1,43,51,2,1,74,51,0,1,65,51,1,1,71,51,0,1,55,51,1,1,43,51,0,1,55,51,1,1,50,51,0,1,59,51,2,1,55,51,0,1,65,51,1,1,62,51,0,1,43,51,1,1,74,51,0,1,65,51,1,1,71,51,0,1,55,51,2,1,43,51,0,1,55,51,1,1,50,51,0,1,59,51,1,1,55,51,0,1,65,51,1,1,62,51,0,1,43,51,2,1,74,51,0,1,65,51,1,1,71,51,0,1,55,51,1,1,55,51,0,1,74,51,0,1,79,51,1,1,50,51,0,1,59,51,0,1,74,51,2,1,55,51,0,1,65,51,1,1,62,51,0,1,43,51,1,1,74,51,0,1,65,51,1,1,71,51,0,1,55,51],[],[],[2,7,48,101,0,7,60,85,0,7,72,70,0,7,36,117,12,3,55,101,0,3,43,101,3,7,48,101,0,7,60,85,0,7,72,70,15,7,43,101,0,7,55,85,0,7,67,70,0,7,31,79,30,7,48,101,0,7,60,85,0,7,72,70,0,7,36,117,15,7,48,101,0,7,60,85,0,7,72,70,0,7,36,117,15,7,48,101,0,7,60,85,0,7,72,70,0,7,36,117,15,7,43,101,3,4,55,95,4,7,67,85,4,4,79,79,4,7,91,71,7,7,103,63],[],[],[],[],[],[],[],[],[],[]]}),
    jsfxrSequence({rate:256,fs:44100,channelsPerNote:5,instruments:[[0,null,0.1,null,0.3,0.6,null,-0.3,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,0.5],null,[0,null,0.1,null,0.3,0.6,null,-0.1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,0.4],null,null,null,null,null,null,null,null,null,null,null,null,null,null],tracks:[[1536,319,69,161,320,63,64,161,64,255,68,161,256,63,69,161,64,63,68,161,64,319,67,161,320,63,62,161,64,191,66,161,192,47,64,161,48,47,66,161,48,47,67,161,48,47,68,161,48,255,69,161,256,63,69,161,64,63,64,161,64,255,68,161,256,63,69,161,64,63,68,161,64,255,67,161,256,63,67,161,64,63,62,161,64,191,66,161,192,47,64,161,48,47,66,161,48,47,67,161,48,47,68,161,48,255,69,161,256,63,69,161,64,63,64,161,64,255,68,161,256,63,69,161,64,63,68,161,64,255,67,161,256,63,67,161,64,63,62,161,64,47,64,161],[],[0,47,57,161,48,47,64,161,48,47,65,161,48,47,64,161,48,47,72,161,48,47,64,161,48,47,65,161,48,47,64,161,48,47,57,161,48,47,63,161,48,47,64,161,48,47,63,161,48,47,71,161,48,47,63,161,48,47,64,161,48,47,63,161,48,47,57,161,48,47,62,161,48,47,64,161,48,47,62,161,48,47,70,161,48,47,62,161,48,47,64,161,48,47,62,161,48,47,57,161,48,47,66,161,48,47,67,161,48,47,69,161,48,47,64,161,48,47,65,161,48,47,67,161,48,47,65,161,48,47,57,161,48,47,64,161,48,47,65,161,48,47,64,161,48,47,72,161,48,47,64,161,48,47,65,161,48,47,64,161,48,47,57,161,48,47,63,161,48,47,64,161,48,47,63,161,48,47,71,161,48,47,63,161,48,47,64,161,48,47,63,161,48,47,57,161,48,47,62,161,48,47,64,161,48,47,62,161,48,47,70,161,48,47,62,161,48,47,64,161,48,47,62,161,48,47,57,161,48,47,66,161,48,47,67,161,48,47,69,161,48,47,64,161,48,47,65,161,48,47,67,161,48,47,65,161,48,47,57,161,48,47,64,161,48,47,65,161,48,47,64,161,48,47,72,161,48,47,64,161,48,47,65,161,48,47,64,161,48,47,57,161,48,47,63,161,48,47,64,161,48,47,63,161,48,47,71,161,48,47,63,161,48,47,64,161,48,47,63,161,48,47,57,161,48,47,62,161,48,47,64,161,48,47,62,161,48,47,70,161,48,47,62,161,48,47,64,161,48,47,62,161,48,47,57,161,48,47,66,161,48,47,67,161,48,47,69,161,48,47,64,161,48,47,65,161,48,47,67,161,48,47,65,161,48,47,57,161,48,47,64,161,48,47,65,161,48,47,64,161,48,47,72,161,48,47,64,161,48,47,65,161,48,47,64,161,48,47,57,161,48,47,63,161,48,47,64,161,48,47,63,161,48,47,71,161,48,47,63,161,48,47,64,161,48,47,63,161,48,47,57,161,48,47,62,161,48,47,64,161,48,47,62,161,48,47,70,161,48,47,62,161,48,47,64,161,48,47,62,161,48,47,57,161],[],[],[],[],[],[],[],[],[],[],[],[],[]]}),
];

let currentMusic = null;
let musicPlaying = false;
let musicVolume = 0.5;

const playMusic = (music, volume = null) => {
    musicVolume = volume || musicVolume;
    if (currentMusic === music && musicPlaying) {
        return;
    }
    if (currentMusic !== null) {
        stopMusic();
    }
    currentMusic = music;
    music.setVolume(musicVolume);
    if (!muted) {
        music.play(true);
        musicPlaying = true;
    }
};

const stopMusic = (clear = true) => {
    if (currentMusic !== null) {
        currentMusic.stop();
        currentMusic = clear ? null : currentMusic;
        musicPlaying = false;
    }
};

const sounds = [
    () => playMusic(musicList[0], 0.7), // 0: Main title
    () => playMusic(musicList[1], 0.4), // 1: Boss
    () => stopMusic(), // 2: Stop music
    createSound([3,0.47,0.23,,0.69,0.53,,-0.18,-0.04,,,,,,,,,,1,,,,,0.29], 1, 0.75), // 3: Title
    createSound([0,0.49,0.33,,0.36,0.16,,0.1,,,,,,,,,,,1,,,,,0.3], 1, 0.75), // 4: Door
    createSound([3,,0.09,,0.3,0.74,,-0.5,,,,,,,,,,,1,,,0.22,,0.3], 1, 0.75), // 5: Killed
    createSound([3,,0.2,0.6,0.06,0.1,,0.13,,,,,,,,,,,1,,,,,0.29], 1, 0.75), // 6: Trigger
    createSound([3,,0.23,,0.17,0.4,,-0.4,,,,,,,,,,,1,,,,,0.29], 1, 0.75), // 7: Bite
    createSound([0,,0.03,,0.3,0.2,,0.2,,,,,,0.44,,,,,1,,,,,0.29], 1, 0.75), // 8: Slime chase
    createSound([3,1.5,0.31,,0.89,0.5,,-0.12,,,,,,,,,,,1,,,,,0.29], 1, 0.75), // 9: Lava rise
    createSound([3,,0.2,0.5,0.34,0.13,,0.2,,,,,,,,,,,1,,,,,0.29], 1, 0.75), // 10: Stomp
    createSound([3,,0.11,,0.2,0.42,,-0.32,0.1,,,,,,,,,,1,,,,,0.29], 1, 0.75), // 11: Clock
    createSound([2,0.29,0.51,0.43,0.67,0.35,,-0.14,,0.33,0.4,,,0.4,,,,,1,,,,,0.29], 3, 0.75), // 12: Ghost
    createSound([2,,0.11,,0.47,0.6,,-0.44,,,,,,,,,,,1,,,0.09,,0.29], 3, 0.75), // 13: Ball
    createSound([3,0.9,0.23,,0.69,0.53,,,-0.04,,,,,,,,,,1,,,,,0.5], 1, 0.2), // 14: Wind
    createSound([3,,0.24,0.13,0.78,0.1,,-0.2217,,,,,,,,0.7,0.27,-0.15,1,,,,,0.29], 1, 0.2), // 15: Bridge
];
